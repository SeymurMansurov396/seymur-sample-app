server:
  port: 8086
logging:
  level:
    reactor:
      netty: INFO
    org:
      springframework:
        cloud:
          gateway: INFO
spring:
  application:
    name: gateway
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      routes:
        - id: bff
          uri: http://localhost:8084
          predicates:
            - Path=/jokes/**
          filters:
            - RemoveRequestHeader=Cookie
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userRemoteAddressResolver}"
                isolated: true
      default-filters:
        - TokenRelay
  security:
    oauth2:
      client:
        provider:
          my-provider:
            issuer-uri: http://localhost:8085/realms/my-realm
            #token-uri: http://localhost:8085/realms/my-realmprotocol/openid-connect/token
            #authorization-uri: http://localhost:8085/realms/my-realm/protocol/openid-connect/auth
            #user-name-attribute: preferred_username
            #user-info-uri: http://localhost:8085/realms/my-realm/protocol/openid-connect/userinfo
        registration:
          gateway:
            provider: my-provider
            client-id: my-client
            client-secret: lRpAQCi0sDQSQHh4snFaWgNY9OtnTwQr
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8086/login/oauth2/code/keycloak"
            scope: openid
  zipkin:
    base-url: http://localhost:9411




